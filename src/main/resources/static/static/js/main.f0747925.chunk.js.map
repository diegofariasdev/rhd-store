{"version":3,"sources":["superstore/clients/ApiClient.js","superstore/model/ProfileModel.js","superstore/clients/ItemsClient.js","superstore/model/CartModel.js","superstore/components/AppBar.js","superstore/components/Layout.js","superstore/components/ItemCard.js","superstore/pages/Recommendations.js","superstore/components/ItemsTable.js","superstore/pages/Cart.js","superstore/clients/OrdersClient.js","superstore/pages/Checkout.js","superstore/pages/Profile.js","superstore/clients/UsersClient.js","superstore/pages/Login.js","superstore/components/CustomDataTable.js","superstore/pages/AdminUsers.js","superstore/model/Utils.js","superstore/pages/AdminOrders.js","superstore/pages/AdminItems.js","superstore/pages/EditUser.js","superstore/pages/EditOrder.js","superstore/components/ItemForm.js","superstore/pages/EditItem.js","superstore/pages/Page403.js","superstore/pages/Page404.js","superstore/pages/NewItem.js","App.js","index.js"],"names":["ApiClient","url","options","onSuccess","onError","fetch","then","res","json","ok","err","status","result","error","window","location","instance","ProfileModel","this","token","JSON","parse","localStorage","getItem","claims","loadToken","tokenBody","atob","access_token","split","exp","sub","roles","setItem","stringify","removeItem","hasAccessToken","expiredToken","Math","round","Date","logout","Object","freeze","ItemsClient","profileModel","pageAndSort","orderBy","pageSize","pageNumber","URL","origin","searchParams","append","fetchUrl","search","itemcode","headers","value","method","body","code","description","price","pictureUrl","pictureurl","name","category","CartModel","items","item","existingItem","find","item1","quantity","push","itemIndex","findIndex","splice","length","total","forEach","AppBar","props","cartModel","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","showSearch","width","Keyboard","onEnter","event","onSearchEnter","target","TextInput","icon","Search","reverse","placeholder","Heading","level","margin","Anchor","label","href","title","isAdmin","Button","Cart","color","isEmpty","Tip","content","UserSettings","TableAdd","OrderedList","User","isLoggedIn","Layout","Grommet","theme","global","colors","brand","font","family","size","height","full","fill","flex","overflow","children","Text","ItemCard","data","Card","CardBody","onClick","onCardClick","Image","fit","src","picture","horizontal","responsive","Paragraph","top","displayType","prefix","decimalScale","fixedDecimalScale","CardFooter","hoverIndicator","onAddToCartClick","Recommendations","useState","setError","isLoaded","setIsLoaded","setPageSize","page","setPage","setData","forceUpdate","setValue","useForceUpdate","itemsClient","useMemo","useRef","searchPuzzles","useCallback","current","fetchItemsPageByName","useEffect","Select","onChange","option","Grid","gap","rows","columns","count","message","Spinner","map","addItem","Pagination","numberItems","totalElements","step","pageable","ItemsTable","property","render","primary","header","disabled","min","onQuantityChange","DataTable","sortable","history","useHistory","setQuantity","quantityArray","areas","start","end","gridArea","getTotal","FormNext","key","newQuantity","parseInt","foundItem","newData","OrdersClient","username","sortBy","order","ordercode","Checkout","billTitles","ordersClient","includes","Basket","orderItems","createOrder","removeAllItems","details","Profile","loading","setLoading","userLogged","setUserLogged","orderClient","fetchOrdersByUsername","getUsername","to","datum","substr","creationTimestamp","orderLog","type","UsersClient","onLogin","onFail","password","user","md5","toString","searchProfile","searchEnable","Login","userClient","query","URLSearchParams","useLocation","usernameError","setUsernameError","passwordError","setPasswordError","usernameSignUpError","setUsernameSignUpError","login","setToken","get","Form","onSubmit","FormField","htmlFor","id","signUp","validate","field","form","passwordConf","CustomDataTable","fetchData","controlledPageCount","pageCount","useTable","initialState","pageIndex","manualPagination","manualSortBy","autoResetPage","autoResetSortBy","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","state","Table","TableHeader","headerGroup","TableRow","getHeaderGroupProps","column","TableCell","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","CaretDownFill","CaretUpFill","TableBody","row","i","getRowProps","cells","cell","getCellProps","TableFooter","colSpan","className","defaultValue","e","Number","AdminUsers","setPageCount","Header","accessor","Cell","original","profile","UserExpert","fetchUsers","sort","desc","totalPages","onSort","getLastStatus","statusArray","today","setDate","getDate","lastStatus","itemDate","lastStatusDate","getTime","AdminOrders","reduce","acc","curr","fetchOrders","AdminItems","fetchItems","fetchItemsPage","EditUser","useParams","userData","setUserData","fetchUser","newValue","updateUser","RadioButtonGroup","EditOrder","setUsername","setStatus","statusDisabled","setStatusDisabled","setItems","abc","fetchOrder","entry","CheckBoxGroup","valueKey","filter","newItems","updateOrder","ItemForm","isEditing","TextArea","test","EditItem","fetchItemByCode","itemData","updateItem","Page403","Bug","Page404","saveItem","App","exact","path","NewItem","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0747925.chunk.js","sourcesContent":["class ApiClient {\r\n\r\n    fetchUrl(url, options, onSuccess, onError) {\r\n\r\n        fetch(url, options)\r\n            .then(function (res) {\r\n                const json = res.json()\r\n                if (res.ok) {\r\n                    return json\r\n                } else {\r\n                    return json.then(err => {\r\n                        err.status = res.status\r\n                        throw err\r\n                    })\r\n                }\r\n            })\r\n            .then(\r\n                (result) => {\r\n                    onSuccess(result)\r\n                },\r\n                (error) => {\r\n                    if(error.status === 403) {\r\n                        window.location = '/#/403'\r\n                    } else if(error.status === 404) {\r\n                        window.location = '/#/404'\r\n                    }\r\n                    onError(error)\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\nexport default ApiClient\r\n","class ProfileModel {\r\n    constructor() {\r\n        if(!ProfileModel.instance) {\r\n            this.token = JSON.parse(localStorage.getItem(\"currentToken\"))\r\n            if (this.token == null) {\r\n                this.token = {}\r\n                this.claims = {}\r\n            } else {\r\n                this.loadToken()\r\n            }\r\n            ProfileModel.instance = this\r\n        }\r\n        return ProfileModel.instance\r\n    }\r\n\r\n    loadToken() {\r\n        const tokenBody = atob(this.token.access_token.split(\".\")[1])\r\n        const claims = JSON.parse(tokenBody)\r\n        if (this.claims == null) {\r\n            this.claims = {}\r\n        }\r\n        this.claims.exp = claims.exp\r\n        this.claims.sub = claims.sub\r\n        this.claims.roles = claims.roles\r\n    }\r\n\r\n    setToken(token) {\r\n        localStorage.setItem(\"currentToken\", JSON.stringify(token))\r\n        this.token.access_token = token.access_token\r\n        this.loadToken()\r\n    }\r\n\r\n    logout() {\r\n        this.claims.exp = null\r\n        this.claims.sub = null\r\n        this.claims.roles = null\r\n        this.token.access_token = null\r\n        localStorage.removeItem(\"currentToken\")\r\n    }\r\n\r\n    isLoggedIn() {\r\n        const hasAccessToken = typeof(this.token.access_token) != 'undefined' && this.token.access_token != null\r\n        const expiredToken = typeof(this.claims.exp) == 'undefined' ||\r\n            this.claims.exp == null ||\r\n            (this.claims.exp <= Math.round(new Date() / 1000))\r\n        if (expiredToken) {\r\n            this.logout()\r\n        }\r\n        return hasAccessToken && !expiredToken\r\n    }\r\n\r\n    getUsername() {\r\n        return this.claims.sub\r\n    }\r\n\r\n    isAdmin() {\r\n        return (typeof(this.claims.roles) == 'undefined' || this.claims.roles == null)\r\n            ? false\r\n            : this.claims.roles === 'admin'\r\n    }\r\n}\r\n\r\nconst instance = new ProfileModel()\r\nObject.freeze(instance)\r\n\r\nexport default instance\r\n","import ApiClient from './ApiClient'\r\nimport ProfileModel from \"../model/ProfileModel\";\r\n\r\nclass ItemsClient extends ApiClient {\r\n\r\n    constructor() {\r\n        super();\r\n        this.profileModel = ProfileModel\r\n    }\r\n\r\n    fetchItemsPage(onSuccess, onError, pageAndSort = {orderBy: 'desc(price)', pageSize: 8, pageNumber: 0}) {\r\n        let url = new URL('/items', window.location.origin)\r\n        url.searchParams.append('orderBy', pageAndSort.orderBy ? pageAndSort.orderBy : 'desc(price)')\r\n        url.searchParams.append('pageSize', pageAndSort.pageSize ? pageAndSort.pageSize : 8)\r\n        url.searchParams.append('pageNumber', pageAndSort.pageNumber ? pageAndSort.pageNumber: 0)\r\n        this.fetchUrl(url, null, onSuccess, onError)\r\n    }\r\n\r\n    fetchItemsPageByName(onSuccess, onError, search, pageAndSort = {orderBy: 'desc(price)', pageSize: 8, pageNumber: 0}) {\r\n        let url = new URL('/items', window.location.origin)\r\n        url.searchParams.append('search', search ? search : '')\r\n        url.searchParams.append('orderBy', pageAndSort.orderBy ? pageAndSort.orderBy : 'desc(price)')\r\n        url.searchParams.append('pageSize', pageAndSort.pageSize ? pageAndSort.pageSize : 8)\r\n        url.searchParams.append('pageNumber', pageAndSort.pageNumber ? pageAndSort.pageNumber: 0)\r\n        this.fetchUrl(url, null, onSuccess, onError)\r\n    }\r\n\r\n    fetchItemByCode(onSuccess, onError, itemcode) {\r\n        let url = new URL('/items/' + itemcode, window.location.origin)\r\n        this.fetchUrl(url,\r\n            {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                }\r\n            },\r\n            onSuccess,\r\n            onError)\r\n    }\r\n\r\n    updateItem(onSuccess, onError, value) {\r\n        let url = new URL('/items', window.location.origin)\r\n        this.fetchUrl(url,\r\n            {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                },\r\n                body: JSON.stringify({\r\n                    code: value.code,\r\n                    description: value.description,\r\n                    price: value.price,\r\n                    pictureUrl: value.pictureurl\r\n                })\r\n            },\r\n            onSuccess,\r\n            onError)\r\n    }\r\n\r\n    saveItem(onSuccess, onError, value) {\r\n        let url = new URL('/items', window.location.origin)\r\n        this.fetchUrl(url,\r\n            {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                },\r\n                body: JSON.stringify([{\r\n                    name: value.name,\r\n                    category: value.category,\r\n                    description: value.description,\r\n                    price: value.price,\r\n                    pictureUrl: value.pictureurl\r\n                }])\r\n            },\r\n            onSuccess,\r\n            onError)\r\n    }\r\n}\r\n\r\nexport default ItemsClient\r\n","class CartModel {\r\n    constructor() {\r\n        if(!CartModel.instance) {\r\n            this.items = JSON.parse(localStorage.getItem(\"currentCart\"))\r\n            if (this.items == null) {\r\n                this.items = []\r\n            }\r\n            CartModel.instance = this\r\n        }\r\n        return CartModel.instance\r\n    }\r\n\r\n    addItem(item) {\r\n        let existingItem = this.items.find(item1 => item1.code === item.code)\r\n        if (existingItem != null) {\r\n            existingItem.quantity++\r\n        } else {\r\n            item.quantity = 1\r\n            this.items.push(item)\r\n        }\r\n        localStorage.setItem(\"currentCart\", JSON.stringify(this.items))\r\n    }\r\n\r\n    removeItem(item) {\r\n        let itemIndex = this.items.findIndex(item1 => item1.code === item.code)\r\n        if (itemIndex !== -1) {\r\n            this.items[itemIndex].quantity--\r\n            if(this.items[itemIndex].quantity < 1) {\r\n                this.items.splice(itemIndex, 1)\r\n            }\r\n        }\r\n        localStorage.setItem(\"currentCart\", JSON.stringify(this.items))\r\n    }\r\n\r\n    removeAllItems() {\r\n        this.items.length = 0\r\n        localStorage.removeItem(\"currentCart\")\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.items.length <= 0\r\n    }\r\n\r\n    getTotal() {\r\n        let total = 0\r\n        this.items.forEach(\r\n            item => total += (item.price * item.quantity)\r\n        )\r\n        return total\r\n    }\r\n}\r\n\r\nconst instance = new CartModel()\r\nObject.freeze(instance)\r\n\r\nexport default instance\r\n","import {Anchor, Box, Button, Heading, Keyboard, TextInput, Tip} from \"grommet\";\r\nimport {Cart, OrderedList, Search, TableAdd, User, UserSettings} from \"grommet-icons\";\r\nimport React from \"react\";\r\nimport CartModel from \"../model/CartModel\";\r\nimport ProfileModel from \"../model/ProfileModel\";\r\n\r\nfunction AppBar (props) {\r\n    const cartModel = CartModel\r\n    const profileModel = ProfileModel\r\n    const homeUrl='/'\r\n    const cartUrl='#/cart'\r\n    const profileUrl='#/profile'\r\n\r\n    const userSettingsUrl='#/adminusers'\r\n    const orderSettingsUrl='#/adminorders'\r\n    const itemSettingsUrl='#/adminitems'\r\n\r\n    return (\r\n        <Box\r\n            tag='header'\r\n            direction='row'\r\n            align='center'\r\n            justify='between'\r\n            background='brand'\r\n            pad={{left: 'medium', right: 'small', vertical: 'small'}}\r\n            elevation='medium'\r\n            style={{zIndex: '1'}}\r\n        >\r\n\r\n            {props.showSearch &&\r\n            <Box width='medium' pad='small' >\r\n                <Keyboard onEnter={(event) => {if(props.onSearchEnter) props.onSearchEnter(event.target.value)}} >\r\n                    <TextInput\r\n                        icon={<Search />}\r\n                        reverse\r\n                        placeholder=\"Search for your puzzle!\"\r\n\r\n                    />\r\n                </Keyboard>\r\n            </Box>\r\n            }\r\n            <Heading\r\n                level='3'\r\n                margin='none'>\r\n                <Anchor label=\"Superstore\" href={homeUrl} /> | {props.title}\r\n            </Heading>\r\n            <Box direction='row'>\r\n                {!profileModel.isAdmin() && <Button\r\n                    icon={<Cart color={cartModel.isEmpty() ? '' : 'accent-1'}/>}\r\n                    href={cartUrl} />}\r\n                {profileModel.isAdmin() && <>\r\n                <Tip content=\"Admin Users\">\r\n                    <Button\r\n                        icon={<UserSettings />}\r\n                        href={userSettingsUrl} />\r\n                </Tip>\r\n                <Tip content=\"Admin Orders\">\r\n                    <Button\r\n                        icon={<TableAdd />}\r\n                        href={orderSettingsUrl} />\r\n                </Tip>\r\n                <Tip content=\"Admin Items\">\r\n                    <Button\r\n                        icon={<OrderedList />}\r\n                        href={itemSettingsUrl} />\r\n                </Tip>\r\n                </>}\r\n                <Button\r\n                    icon={<User color={profileModel.isLoggedIn() ? 'accent-1' : ''}/>}\r\n                    href={profileUrl} />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AppBar;","import {Box, Grommet, Text} from 'grommet'\r\nimport AppBar from './AppBar'\r\n\r\nfunction Layout (props) {\r\n    const theme = {\r\n        global: {\r\n            colors: {\r\n                brand: '#228BE6',\r\n            },\r\n            font: {\r\n                family: 'Roboto',\r\n                size: '18px',\r\n                height: '20px',\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Grommet theme={theme} full>\r\n            <Box fill>\r\n                <AppBar {...props}/>\r\n                <Box\r\n                    flex\r\n                    overflow='auto'\r\n                    direction='column'\r\n                    pad='medium'>\r\n                    {props.children}\r\n                </Box>\r\n                <Box\r\n                    direction='row'\r\n                    background=\"brand\"\r\n                    pad=\"medium\"\r\n                    justify='between'\r\n                >\r\n                    <Text>RHD Application Test by Diego Farías</Text>\r\n                </Box>\r\n            </Box>\r\n        </Grommet>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport {Box, Button, Card, CardBody, CardFooter, Heading, Image, Paragraph} from 'grommet'\r\nimport {Cart} from 'grommet-icons'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nfunction ItemCard(props) {\r\n    const data = props.data\r\n\r\n    return (\r\n    <Card elevation='large' width='small'>\r\n        <CardBody height='medium' onClick={() => props.onCardClick(data)} >\r\n            <Image\r\n                fit='cover'\r\n                src={'data:image/jpeg;base64, ' + data.picture}\r\n            />\r\n        </CardBody>\r\n        <Box\r\n            pad={{ horizontal: 'small' }}\r\n            responsive={false}\r\n            onClick={() => props.onCardClick(data)}>\r\n            <Paragraph margin={{ top: 'none' }}>\r\n                {data.name}\r\n            </Paragraph>\r\n            <Heading level='4' margin='small'>\r\n                <NumberFormat\r\n                    displayType='text'\r\n                    prefix='USD $'\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                    value={data.price} />\r\n            </Heading>\r\n        </Box>\r\n        <CardFooter pad='small' justify='center'>\r\n            <Button\r\n                icon={<Cart />}\r\n                label='Add to Cart'\r\n                hoverIndicator\r\n                size='small'\r\n                onClick={() => props.onAddToCartClick(data)}\r\n            />\r\n        </CardFooter>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default ItemCard\r\n","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\r\nimport ItemsClient from '../clients/ItemsClient'\r\nimport Layout from '../components/Layout'\r\nimport ItemCard from '../components/ItemCard'\r\nimport {Grid, Pagination, Select, Spinner, Text} from 'grommet'\r\nimport CartModel from '../model/CartModel'\r\nimport {Form} from 'grommet-controls'\r\n\r\nfunction useForceUpdate(){\r\n    const [, setValue] = useState(0)\r\n    return () => setValue(value => value + 1)\r\n}\r\n\r\nfunction Recommendations() {\r\n    const [error, setError] = useState(null)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [pageSize, setPageSize] = useState('5');\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([])\r\n    const forceUpdate = useForceUpdate();\r\n    const itemsClient = useMemo(() => {\r\n        return new ItemsClient()\r\n    }, [])\r\n    const cartModel = CartModel\r\n    let search = useRef()\r\n\r\n    const searchPuzzles = useCallback(\r\n        (value) => {\r\n            search.current = value\r\n            setIsLoaded(false)\r\n            setData([])\r\n            itemsClient.fetchItemsPageByName(\r\n                (result) => {\r\n                    setData(result)\r\n                    setIsLoaded(true)\r\n                },\r\n                (error) => {\r\n                    setError(error)\r\n                    setIsLoaded(true)\r\n                },\r\n                value,\r\n                {orderBy: 'desc(price)', pageSize: pageSize, pageNumber: page - 1}\r\n            )\r\n        },\r\n        [itemsClient, page, pageSize]\r\n    )\r\n\r\n    const onPageSizeChange = ({option}) => {\r\n        setPage(1)\r\n        setPageSize(option)\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchPuzzles(search.current)\r\n    }, [searchPuzzles])\r\n\r\n    return (\r\n        <Layout\r\n            title='Recommendations'\r\n            showSearch={true}\r\n            onSearchEnter={searchPuzzles}\r\n        >\r\n            <Form margin={{'bottom': 'small'}}>\r\n                <Text>Products per page</Text>\r\n                <Select\r\n                    options={['5', '10', '15']}\r\n                    value={pageSize}\r\n                    onChange={onPageSizeChange}\r\n                />\r\n            </Form>\r\n            <Grid\r\n                gap='medium'\r\n                rows='medium'\r\n                columns={{ count: 'fit', size: 'small' }}\r\n                fill='horizontal'\r\n            >\r\n                {error && <div>Error: {error.message}</div>}\r\n                {!isLoaded &&  <Spinner />}\r\n                {isLoaded && !error && data.content.map(item => (\r\n                    <ItemCard\r\n                        key={item.code}\r\n                        onCardClick={() => {}}\r\n                        onAddToCartClick={() => {\r\n                            cartModel.addItem(item)\r\n                            forceUpdate()\r\n                        }}\r\n                        data={item}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            {isLoaded && !error &&\r\n            <Pagination\r\n                margin={{'vertical': '2em', 'horizontal': 'auto'}}\r\n                pad='medium'\r\n                numberItems={data.totalElements}\r\n                onChange={({page}) => { setPage(page) }}\r\n                step={data.size}\r\n                page={data.pageable.pageNumber + 1}\r\n            />\r\n            }\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Recommendations\r\n","import {DataTable, Image, Text} from 'grommet'\r\nimport NumberFormat from 'react-number-format'\r\nimport {NumberInput} from 'grommet-controls'\r\n\r\nfunction ItemsTable (props) {\r\n    const columns = [\r\n        {\r\n            property: 'picture',\r\n            size: 'xsmall',\r\n            render: item => (\r\n\r\n                <Image\r\n                    fit='cover'\r\n                    size='small'\r\n                    src={'data:image/jpeg;base64, ' + item.picture}\r\n                />\r\n            ),\r\n        },\r\n        {\r\n            property: 'name',\r\n            primary: true,\r\n            header: 'Name',\r\n        },\r\n        {\r\n            property: 'price',\r\n            header: 'Price',\r\n            render: item => (\r\n                <NumberFormat\r\n                    displayType='text'\r\n                    prefix='USD $'\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                    value={item.price} />\r\n            ),\r\n        },\r\n        {\r\n            property: 'quantity',\r\n            header: 'Quantity',\r\n            render: item => (\r\n                props.disabled\r\n                    ? <Text>{props.quantity[item.code]}</Text>\r\n                    : <NumberInput\r\n                        key={item.code}\r\n                        value={props.quantity[item.code]}\r\n                        min={0}\r\n                        onChange={event => {\r\n                            props.onQuantityChange(event, item.code)\r\n                        }}\r\n                    />\r\n            ),\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <DataTable\r\n            sortable={true}\r\n            size='medium'\r\n            columns={columns}\r\n            data={props.data} />\r\n    )\r\n}\r\n\r\nexport default ItemsTable\r\n","import React, {useEffect, useState} from 'react'\r\nimport Layout from '../components/Layout'\r\nimport {Box, Button, Grid, Paragraph} from 'grommet'\r\nimport NumberFormat from 'react-number-format'\r\nimport CartModel from '../model/CartModel'\r\nimport {FormNext} from 'grommet-icons'\r\nimport ProfileModel from '../model/ProfileModel'\r\nimport {useHistory} from 'react-router'\r\nimport ItemsTable from '../components/ItemsTable'\r\n\r\nfunction Cart() {\r\n    const history = useHistory()\r\n    const [data, setData] = useState([])\r\n    const [quantity, setQuantity] = useState([])\r\n    const cartModel = CartModel\r\n    const profileModel = ProfileModel\r\n\r\n    const onQuantityChange = (event, key) => {\r\n        let newQuantity = parseInt(event.target.value)\r\n        let quantityArray = []\r\n        const foundItem = data.find(item1 => item1.code === key)\r\n        if (newQuantity > quantity[key]) cartModel.addItem(foundItem)\r\n        if (newQuantity < quantity[key]) cartModel.removeItem(foundItem)\r\n        let newData = [...cartModel.items]\r\n        newData.forEach(item => quantityArray[item.code] = item.quantity)\r\n        setData(newData)\r\n        setQuantity(quantityArray)\r\n    }\r\n\r\n    const cartCheckout = () => {\r\n        if (profileModel.isLoggedIn())\r\n            history.push('/checkout')\r\n        else\r\n            history.push('/login?from=cart')\r\n    };\r\n\r\n    useEffect(() => {\r\n        let quantityArray = []\r\n        cartModel.items.forEach(item => quantityArray[item.code] = item.quantity)\r\n        setData(cartModel.items)\r\n        setQuantity(quantityArray)\r\n    }, [cartModel.items])\r\n\r\n    return (\r\n        <Layout title='Your Order'>\r\n            <Box align='center'>\r\n                <Grid\r\n                    rows={['xxsmall']}\r\n                    columns={['medium', 'small']}\r\n                    gap=\"small\"\r\n                    pad={{\"bottom\": \"medium\"}}\r\n                    areas={[\r\n                        { name: 'total', start: [0, 0], end: [0, 0] },\r\n                        { name: 'proceed', start: [1, 0], end: [1, 0] }\r\n                    ]}\r\n                >\r\n                    <Box gridArea=\"total\">\r\n                        <Paragraph margin={ {\"right\": \"5em\"} } >\r\n                            {cartModel.isEmpty() && \"Your cart is empty\"}\r\n                            {!cartModel.isEmpty() &&\r\n                            <NumberFormat\r\n                                displayType='text'\r\n                                prefix='Your total is: USD $'\r\n                                decimalScale={2}\r\n                                fixedDecimalScale={true}\r\n                                value={cartModel.getTotal()} />}\r\n                        </Paragraph>\r\n                    </Box>\r\n                    <Box gridArea=\"proceed\">\r\n                        {!cartModel.isEmpty() &&\r\n                        <Button\r\n                            icon={<FormNext/>}\r\n                            primary\r\n                            label='Proceed to Checkout'\r\n                            size='small'\r\n                            onClick={cartCheckout}\r\n                        />\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n                <ItemsTable\r\n                    data={data}\r\n                    quantity={quantity}\r\n                    onQuantityChange={onQuantityChange}\r\n                    />\r\n            </Box>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import ApiClient from './ApiClient'\r\nimport ProfileModel from '../model/ProfileModel'\r\n\r\nclass OrdersClient extends ApiClient {\r\n\r\n    constructor() {\r\n        super();\r\n        this.profileModel = ProfileModel\r\n    }\r\n\r\n    fetchOrdersByUsername(onSuccess, onError, username, pageAndSort = {sortBy: 'desc(creationTimestamp)', pageSize: 8, pageNumber: 0}) {\r\n        let url = new URL('/orders/client/' + username, window.location.origin)\r\n        url.searchParams.append('sortBy', pageAndSort.sortBy ? pageAndSort.sortBy : 'desc(creationTimestamp)')\r\n        url.searchParams.append('pageSize', pageAndSort.pageSize ? pageAndSort.pageSize : 8)\r\n        url.searchParams.append('pageNumber', pageAndSort.pageNumber ? pageAndSort.pageNumber: 0)\r\n        if(!this.profileModel.isLoggedIn()) {\r\n            onError({error : \"uilogout\", message: \"user logged out\"})\r\n            return\r\n        }\r\n        this.fetchUrl(\r\n            url,\r\n            {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                }\r\n            },\r\n            onSuccess,\r\n            onError)\r\n    }\r\n\r\n    createOrder(onSuccess, onError, order) {\r\n        let url = new URL('/orders', window.location.origin)\r\n        if(!this.profileModel.isLoggedIn()) {\r\n            onError({error : \"uilogout\", message: \"user logged out\"})\r\n            return\r\n        }\r\n        this.fetchUrl(\r\n            url,\r\n            {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                },\r\n                body: JSON.stringify(order)\r\n            },\r\n            onSuccess,\r\n            onError\r\n        )\r\n    }\r\n\r\n    fetchOrders(onSuccess, onError, pageAndSort = {sortBy: 'desc(creationTimestamp)', pageSize: 5, pageNumber: 0}) {\r\n        let url = new URL('/orders', window.location.origin)\r\n        url.searchParams.append('sortBy', pageAndSort.sortBy ? pageAndSort.sortBy : 'desc(creationTimestamp)')\r\n        url.searchParams.append('pageSize', pageAndSort.pageSize ? pageAndSort.pageSize : 8)\r\n        url.searchParams.append('pageNumber', pageAndSort.pageNumber ? pageAndSort.pageNumber: 0)\r\n        if(!this.profileModel.isLoggedIn()) {\r\n            onError({error : \"uilogout\", message: \"user logged out\"})\r\n            return\r\n        }\r\n        this.fetchUrl(\r\n            url,\r\n            {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                }\r\n            },\r\n            onSuccess,\r\n            onError)\r\n    }\r\n\r\n    fetchOrder(onSuccess, onError, ordercode) {\r\n        let url = new URL('/orders/' + ordercode, window.location.origin)\r\n        this.fetchUrl(\r\n            url,\r\n            {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                }\r\n            },\r\n            onSuccess,\r\n            onError)\r\n    }\r\n\r\n    updateOrder(onSuccess, onError, order) {\r\n        let url = new URL('/orders', window.location.origin)\r\n        this.fetchUrl(\r\n            url,\r\n            {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                },\r\n                body: JSON.stringify(order)\r\n            },\r\n            onSuccess,\r\n            onError)\r\n    }\r\n}\r\n\r\nexport default OrdersClient","import React, {useEffect, useState} from 'react'\r\nimport Layout from '../components/Layout'\r\nimport NumberFormat from 'react-number-format'\r\nimport CartModel from '../model/CartModel'\r\nimport {Box, Button, DataTable} from 'grommet'\r\nimport {Basket} from 'grommet-icons'\r\nimport ProfileModel from '../model/ProfileModel'\r\nimport OrdersClient from '../clients/OrdersClient'\r\nimport {useHistory} from 'react-router'\r\n\r\nfunction Checkout() {\r\n    const history = useHistory()\r\n    const [data, setData] = useState([])\r\n    const billTitles = ['Subtotal', 'Shipping', 'Total']\r\n    const cartModel = CartModel\r\n    const profileModel = ProfileModel\r\n    const ordersClient = new OrdersClient()\r\n\r\n    useEffect(() => {\r\n        let newData = [...cartModel.items]\r\n        newData.push({'name': 'Subtotal', 'price': cartModel.getTotal(), 'quantity': 1})\r\n        newData.push({'name': 'Shipping', 'price': .01, 'quantity': 1})\r\n        newData.push({'name': 'Total', 'price': cartModel.getTotal() + .01, 'quantity': 1})\r\n        setData(newData)\r\n    }, [cartModel])\r\n\r\n    const columns = [\r\n        {\r\n            property: 'name',\r\n            header: 'Product',\r\n            render: item => {\r\n                if (billTitles.includes(item.name)) return item.name\r\n                else return item.name + ' | [x' + item.quantity + ']'\r\n            }\r\n        },\r\n        {\r\n            property: 'subtotal',\r\n            header: 'Subtotal',\r\n            render: item => (\r\n                <NumberFormat\r\n                    displayType='text'\r\n                    prefix='USD $'\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                    value={item.price * item.quantity} />\r\n            )\r\n        }\r\n    ]\r\n\r\n    const createOrder = () => {\r\n        let order = {\r\n            orderItems : []\r\n        }\r\n\r\n        cartModel.items.forEach((item) => {\r\n            order.orderItems.push({\r\n                item: {code: item.code},\r\n                quantity: item.quantity\r\n            })\r\n        })\r\n\r\n        ordersClient.createOrder(() => {\r\n            history.push('/profile')\r\n            cartModel.removeAllItems()\r\n        }, (error) => {\r\n            if(error.details[0] === \"uilogout\") {\r\n                profileModel.logout()\r\n                history.push('/login?logoutreason=tokenexpired')\r\n            }\r\n        }, order)\r\n    };\r\n\r\n    return (\r\n        <Layout title='Your Order'>\r\n            <Box direction='column'>\r\n                <DataTable\r\n                    sortable={true}\r\n                    size='medium'\r\n                    columns={columns}\r\n                    data={data} />\r\n                <Button\r\n                    icon={<Basket/>}\r\n                    primary\r\n                    label='Place order'\r\n                    size='small'\r\n                    onClick={createOrder}\r\n                />\r\n            </Box>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","import {Redirect, useHistory} from 'react-router'\r\nimport React, {useEffect, useMemo, useState} from 'react'\r\nimport {Box, Button, DataTable, Heading} from 'grommet'\r\nimport Layout from '../components/Layout'\r\nimport ProfileModel from '../model/ProfileModel'\r\nimport OrdersClient from '../clients/OrdersClient'\r\n\r\nfunction Profile() {\r\n    const history = useHistory()\r\n    const [loading, setLoading] = useState(true)\r\n    const [userLogged, setUserLogged] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const orderClient = useMemo(() => {\r\n        return new OrdersClient()\r\n    }, [])\r\n    const profileModel = ProfileModel\r\n\r\n    const columns = [\r\n        {\r\n            property: 'code',\r\n            header: 'Code',\r\n            size: \"small\",\r\n            render: datum => (\r\n                datum.code.substr(0, 7)\r\n            )\r\n        },\r\n        {\r\n            property: 'creationTimestamp',\r\n            header: 'Date',\r\n            render: datum => (\r\n                datum.creationTimestamp.substr(0, 10)\r\n            )\r\n        },\r\n        {\r\n            property: 'productsCount',\r\n            header: 'Products',\r\n            render: datum => {\r\n                let total = 0\r\n                datum.orderItems.forEach(item => total += item.quantity)\r\n                return total\r\n            }\r\n        },\r\n        {\r\n            property: 'total',\r\n            header: 'Total'\r\n        },\r\n        {\r\n            property: 'status',\r\n            header: 'Status',\r\n            render: datum => {\r\n                const lastStatus = datum.orderLog[datum.orderLog.length - 1].status\r\n                return lastStatus\r\n            }\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if (profileModel.isLoggedIn()) {\r\n            setUserLogged(true)\r\n            if(!profileModel.isAdmin()) {\r\n                orderClient.fetchOrdersByUsername((data) => {\r\n                    setData(data.content)\r\n                }, (error) => {\r\n                    if(error.details[0] === \"uilogout\") {\r\n                        profileModel.logout()\r\n                        history.push('/login?logoutreason=tokenexpired')\r\n                    }\r\n                }, profileModel.getUsername())\r\n            }\r\n        } else {\r\n            setUserLogged(false)\r\n        }\r\n        setLoading(false)\r\n    }, [history, orderClient, profileModel])\r\n\r\n    const logout = () => {\r\n        profileModel.logout()\r\n        history.push('/')\r\n    };\r\n\r\n    return (\r\n        <Layout title='Profile'>\r\n            {loading &&  <div>Loading...</div>}\r\n            {!loading && !userLogged && <Redirect to='/login' />}\r\n            {!loading && userLogged &&\r\n            <Box direction='column' width='large' fill='horizontal'>\r\n                {!profileModel.isAdmin() && <>\r\n                    <Heading level={3}>Orders</Heading>\r\n                    <DataTable\r\n                        margin={{'top': '15px'}}\r\n                        size=\"small\"\r\n                        columns={columns}\r\n                        data={data}\r\n                    />\r\n                </>}\r\n\r\n                <Heading level={3}>User Info ({profileModel.getUsername()})</Heading>\r\n                <Button primary type=\"submit\" label=\"Logout\" color=\"accent-4\" onClick={logout}/>\r\n            </Box>\r\n            }\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import ApiClient from './ApiClient'\r\nimport md5 from 'crypto-js/md5'\r\nimport ProfileModel from '../model/ProfileModel'\r\n\r\nclass UsersClient extends ApiClient {\r\n\r\n    constructor() {\r\n        super();\r\n        this.profileModel = ProfileModel\r\n    }\r\n\r\n    login(onLogin, onFail, username, password) {\r\n        const url = new URL('/users/login', window.location.origin)\r\n        const user = {\"username\": username, \"password\": md5(password).toString()}\r\n        this.fetchUrl(url,\r\n            {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)},\r\n            onLogin,\r\n            onFail)\r\n    }\r\n\r\n    signUp(onSuccess, onFail, username, password) {\r\n        const url = new URL('/users', window.location.origin)\r\n        const user = {\"username\": username, \"password\": md5(password).toString()}\r\n        this.fetchUrl(url,\r\n            {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)},\r\n            onSuccess,\r\n            onFail)\r\n    }\r\n\r\n    fetchUsers(onSuccess, onFail, searchProfile, searchEnable, pageAndSort) {\r\n        const url = new URL('/users', window.location.origin)\r\n        url.searchParams.append('profile', searchProfile ? searchProfile : '')\r\n        url.searchParams.append('enable', searchEnable ? searchEnable : '')\r\n        url.searchParams.append('orderBy', pageAndSort.orderBy ? pageAndSort.orderBy : 'desc(creationTimestamp)')\r\n        url.searchParams.append('pageSize', pageAndSort.pageSize ? pageAndSort.pageSize : 5)\r\n        url.searchParams.append('pageNumber', pageAndSort.pageNumber ? pageAndSort.pageNumber: 0)\r\n        if(!this.profileModel.isLoggedIn()) {\r\n            onFail({error : \"uilogout\", message: \"user logged out\"})\r\n            return\r\n        }\r\n        this.fetchUrl(url,\r\n            {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                }\r\n            },\r\n            onSuccess,\r\n            onFail\r\n        )\r\n    }\r\n\r\n    fetchUser(onSuccess, onFail, username) {\r\n        const url = new URL('/users/' + username, window.location.origin)\r\n        if(!this.profileModel.isLoggedIn()) {\r\n            onFail({error : \"uilogout\", message: \"user logged out\"})\r\n            return\r\n        }\r\n        this.fetchUrl(url,\r\n            {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                }\r\n            },\r\n            onSuccess,\r\n            onFail\r\n        )\r\n    }\r\n\r\n    updateUser(onSuccess, onFail, user) {\r\n        const url = new URL('/users', window.location.origin)\r\n        user.password = md5(user.password).toString()\r\n        if(!this.profileModel.isLoggedIn()) {\r\n            onFail({error : \"uilogout\", message: \"user logged out\"})\r\n            return\r\n        }\r\n        this.fetchUrl(url,\r\n            {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + this.profileModel.token.access_token\r\n                },\r\n                body: JSON.stringify(user)\r\n            },\r\n            onSuccess,\r\n            onFail\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersClient\r\n","import React, {useState} from 'react'\r\nimport {Box, Button, Form, FormField, Heading, TextInput} from 'grommet'\r\nimport Layout from '../components/Layout'\r\nimport ProfileModel from '../model/ProfileModel'\r\nimport {useHistory, useLocation} from 'react-router'\r\nimport UsersClient from '../clients/UsersClient'\r\n\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction Login() {\r\n    const profileModel = ProfileModel\r\n    const userClient = new UsersClient()\r\n    const history = useHistory()\r\n    const query = useQuery()\r\n    const [usernameError, setUsernameError] = useState(null)\r\n    const [passwordError, setPasswordError] = useState(null)\r\n    const [usernameSignUpError, setUsernameSignUpError] = useState(null)\r\n\r\n    const login = ({value}) => {\r\n        setUsernameError(null)\r\n        setPasswordError(null)\r\n\r\n        userClient.login((token) => {\r\n            profileModel.setToken(token)\r\n            if(query.get(\"from\") === \"cart\") history.push('/cart')\r\n            else profileModel.isAdmin()\r\n                ? history.push('/adminorders')\r\n                : history.push('/')\r\n        }, (error) => {\r\n            if(error.details[0] === \"Username not found\") {\r\n                setUsernameError(\"Username not found\")\r\n            }\r\n            if(error.details[0] === \"Bad credentials\") {\r\n                setPasswordError(\"Incorrect username and/or password\")\r\n            }\r\n            if(error.details[0] === \"User is disabled\") {\r\n                setUsernameError(\"Too many failed attempts\")\r\n            }\r\n        }, value.username\r\n        , value.password)\r\n    }\r\n\r\n    const signup = ({value}) => {\r\n        userClient.signUp(() => {\r\n                login({value})\r\n            }, () => {\r\n                setUsernameSignUpError(\"Unexpected error while creating user\")\r\n            }, value.username\r\n            , value.password)\r\n    }\r\n\r\n    return (\r\n        <Layout title='Login'>\r\n            <Box\r\n                fill='horizontal'\r\n                pad={{\"horizontal\": \"10em\"}}>\r\n                <Heading level={2}>Please login</Heading>\r\n                <Form\r\n                    onSubmit={login}\r\n                >\r\n                    <FormField name=\"username\" htmlFor=\"username-id\" label=\"Username\" error={usernameError}>\r\n                        <TextInput id=\"username-id\" name=\"username\" />\r\n                    </FormField>\r\n                    <FormField name=\"password\" htmlFor=\"password-id\" label=\"Password\" error={passwordError}>\r\n                        <TextInput id=\"password-id\" name=\"password\" type=\"password\"/>\r\n                    </FormField>\r\n                    <Box pad={{'horizontal': 'large'}}>\r\n                        <Button primary type=\"submit\" label=\"Login\" />\r\n                    </Box>\r\n                </Form>\r\n            </Box>\r\n            <Box\r\n                fill='horizontal'\r\n                pad={{\"horizontal\": \"10em\"}}\r\n                margin={{\"top\": \"18em\", \"bottom\": \"22em\"}}\r\n            >\r\n                <Heading level={3}>... Or sign up if you're new</Heading>\r\n                <Form\r\n                    onSubmit={signup}\r\n                >\r\n                    <FormField\r\n                        name=\"username\"\r\n                        htmlFor=\"username-su-id\"\r\n                        label=\"Username\"\r\n                        validate={(field, form) => {\r\n                            if(typeof (form.username) == 'undefined' || form.username === \"\") return \"Username is missing\"\r\n                        }}\r\n                        error={usernameSignUpError}>\r\n                        <TextInput id=\"username-su-id\" name=\"username\" />\r\n                    </FormField>\r\n                    <FormField\r\n                        name=\"password\"\r\n                        htmlFor=\"password-su-id\"\r\n                        label=\"Password\">\r\n                        <TextInput id=\"password-su-id\" name=\"password\" type=\"password\"/>\r\n                    </FormField>\r\n                    <FormField\r\n                        name=\"passwordConf\"\r\n                        htmlFor=\"password-su-conf-id\"\r\n                        label=\"Confirm Password\"\r\n                        validate={(field, form) => {\r\n                            if(form.passwordConf !== form.password) return \"Password and Confirm Password mismatch\"\r\n                        }}>\r\n                        <TextInput id=\"password-su-conf-id\" name=\"passwordConf\" type=\"password\"/>\r\n                    </FormField>\r\n                    <Box pad={{'horizontal': 'large'}}>\r\n                        <Button type=\"submit\" label=\"Sign Up\" />\r\n                    </Box>\r\n                </Form>\r\n            </Box>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {useTable, usePagination, useSortBy} from 'react-table'\r\nimport {useEffect} from 'react'\r\nimport {Table, TableBody, TableCell, TableFooter, TableHeader, TableRow} from 'grommet'\r\nimport {CaretDownFill, CaretUpFill} from 'grommet-icons'\r\n\r\nfunction CustomDataTable ({columns,\r\n                          data,\r\n                          fetchData,\r\n                          loading,\r\n                          pageCount: controlledPageCount}\r\n) {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        // Get the state from the instance\r\n        state: { pageIndex, pageSize, sortBy },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: 0, pageSize: 5 }, // Pass our hoisted table state\r\n            manualPagination: true, // Tell the usePagination\r\n            manualSortBy: true,\r\n            autoResetPage: false,\r\n            autoResetSortBy: false,\r\n            // hook that we'll handle our own data fetching\r\n            // This means we'll also have to provide our own\r\n            // pageCount.\r\n            pageCount: controlledPageCount,\r\n        },\r\n        useSortBy,\r\n        usePagination\r\n    )\r\n\r\n    useEffect(() => {\r\n        fetchData({ pageIndex, pageSize, sortBy })\r\n    }, [fetchData, pageIndex, pageSize, sortBy])\r\n\r\n    return (\r\n        <>\r\n            <Table {...getTableProps()}>\r\n                <TableHeader>\r\n                {// Loop over the header rows\r\n                    headerGroups.map(headerGroup => (\r\n                        // Apply the header row props\r\n                        <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                            {// Loop over the headers in each row\r\n                                headerGroup.headers.map(column => (\r\n                                    // Apply the header cell props\r\n                                    <TableCell {...column.getHeaderProps()}>\r\n                                        <span {...column.getSortByToggleProps()}>\r\n                                            {column.render('Header')}\r\n                                            {/* Add a sort direction indicator */}\r\n                                            {column.isSorted\r\n                                                ? column.isSortedDesc\r\n                                                    ? <CaretDownFill />\r\n                                                    : <CaretUpFill />\r\n                                                : ''}\r\n                                        </span>\r\n                                    </TableCell>\r\n                                ))}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableHeader>\r\n                <TableBody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <TableRow {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>\r\n                            })}\r\n                        </TableRow>\r\n                    )\r\n                })}\r\n                </TableBody>\r\n                <TableFooter>\r\n                    <TableRow>\r\n                        {loading ? (\r\n                            // Use our custom loading state to show a loading indicator\r\n                            <TableCell colSpan=\"10000\">Loading...</TableCell>\r\n                        ) : (\r\n                            <TableCell colSpan=\"10000\">\r\n                                Showing {page.length} of ~{controlledPageCount * pageSize}{' '}\r\n                                results\r\n                            </TableCell>\r\n                        )}\r\n                    </TableRow>\r\n                </TableFooter>\r\n            </Table>\r\n            <div className=\"pagination\">\r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    {'<<'}\r\n                </button>{' '}\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    {'<'}\r\n                </button>{' '}\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    {'>'}\r\n                </button>{' '}\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    {'>>'}\r\n                </button>{' '}\r\n                <span>\r\n          Page{' '}\r\n                    <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n                <span>\r\n          | Go to page:{' '}\r\n                    <input\r\n                        type=\"number\"\r\n                        defaultValue={pageIndex + 1}\r\n                        onChange={e => {\r\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                            gotoPage(page)\r\n                        }}\r\n                        style={{ width: '100px' }}\r\n                    />\r\n        </span>{' '}\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                        setPageSize(Number(e.target.value))\r\n                    }}\r\n                >\r\n                    {[5, 10, 15].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomDataTable\r\n","import Layout from '../components/Layout'\r\nimport {useCallback, useMemo, useState} from 'react'\r\nimport UsersClient from '../clients/UsersClient'\r\nimport ProfileModel from '../model/ProfileModel'\r\nimport {useHistory} from 'react-router'\r\nimport {Anchor, Heading, Text} from 'grommet'\r\nimport CustomDataTable from '../components/CustomDataTable'\r\nimport {UserExpert} from 'grommet-icons'\r\n\r\nfunction AdminUsers () {\r\n    const history = useHistory()\r\n    const profileModel = ProfileModel\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [pageCount, setPageCount] = useState(0)\r\n    const userClient = useMemo(() => {\r\n        return new UsersClient()\r\n    }, [])\r\n    const columns = useMemo(() => [\r\n        {\r\n            Header: 'Username',\r\n            accessor: 'username',\r\n            Cell: ({row}) => {\r\n                return row.original.profile === 'admin' ?\r\n                    <Text>{row.original.username}</Text> :\r\n                    <Anchor href={\"/#/adminusers/\" + row.original.username} label={row.original.username} />\r\n            }\r\n        },\r\n        {\r\n            Header: 'Profile',\r\n            accessor: 'profile',\r\n            Cell: ({value}) =>\r\n                <Text>{value} {value === 'admin' ? <UserExpert size='small' /> : <></>} </Text>\r\n        },\r\n        {\r\n            Header: 'Enabled',\r\n            accessor: 'enabled',\r\n            Cell: ({value}) =>\r\n                <Text color={value ? 'dark-1' : 'status-disabled'}>{value ? 'Enabled' : 'Disabled'}</Text>\r\n        },\r\n        {\r\n            Header: 'Creation Date',\r\n            accessor: 'creationTimestamp',\r\n            Cell: ({value}) =>\r\n                <>{value.substr(0, 10)}</>\r\n        }\r\n        ],\r\n        [])\r\n\r\n    const fetchUsers = useCallback(({pageSize, pageIndex, sortBy}) => {\r\n        setLoading(true)\r\n        let sort = 'desc(creationTimestamp)'\r\n\r\n        if(sortBy.length > 0) {\r\n            const sortDirection = sortBy[0].desc ? 'desc' : 'asc'\r\n            sort = sortDirection + '(' + sortBy[0].id + ')'\r\n        }\r\n\r\n        userClient.fetchUsers(\r\n            (data) => {\r\n                setData(data.content)\r\n                setPageCount(data.totalPages)\r\n                setLoading(false)\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            }, null\r\n            , null\r\n            ,{pageSize: pageSize, pageNumber: pageIndex, orderBy: sort})\r\n    }, [history, profileModel, userClient])\r\n\r\n    return (\r\n        <Layout\r\n            title='Admin Users'\r\n        >\r\n            <Heading level={2}>Users</Heading>\r\n            <CustomDataTable\r\n                columns={columns}\r\n                data={data}\r\n                onSort={fetchUsers}\r\n                fetchData={fetchUsers}\r\n                loading={loading}\r\n                pageCount={pageCount}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminUsers\r\n","\r\n    function getLastStatus(statusArray) {\r\n        const today = new Date()\r\n        today.setDate(today.getDate() - 365)\r\n        let lastStatus = {\r\n            status : 'null',\r\n            creationTimestamp : today.toString()\r\n        }\r\n        statusArray.forEach(item => {\r\n            let itemDate = new Date(item.creationTimestamp)\r\n            let lastStatusDate = new Date(lastStatus.creationTimestamp)\r\n            if (itemDate.getTime() > lastStatusDate.getTime()) {\r\n                lastStatus = item\r\n            }\r\n        })\r\n\r\n        if (lastStatus.status === 'null') return null\r\n        else return lastStatus\r\n    }\r\n\r\nexport default getLastStatus\r\n","import Layout from '../components/Layout'\r\nimport {Anchor, Heading, Text} from 'grommet'\r\nimport CustomDataTable from '../components/CustomDataTable'\r\nimport {useCallback, useMemo, useState} from 'react'\r\nimport ProfileModel from '../model/ProfileModel'\r\nimport {useHistory} from 'react-router'\r\nimport OrdersClient from '../clients/OrdersClient'\r\nimport getLastStatus from \"../model/Utils\";\r\n\r\nfunction AdminOrders () {\r\n    const history = useHistory()\r\n    const profileModel = ProfileModel\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [pageCount, setPageCount] = useState(0)\r\n    const orderClient = useMemo(() => {\r\n        return new OrdersClient()\r\n    }, [])\r\n    const columns = useMemo(() => [\r\n            {\r\n                Header: 'Code',\r\n                accessor: 'code',\r\n                Cell: ({value}) => <Anchor href={\"/#/adminorders/\" + value} label={value} />\r\n            },\r\n            {\r\n                Header: 'User',\r\n                accessor: 'user.username'\r\n            },\r\n            {\r\n                Header: 'Total',\r\n                accessor: 'total'\r\n            },\r\n            {\r\n                Header: 'Total Products',\r\n                accessor: 'orderItems',\r\n                Cell: ({value}) =>\r\n                    <Text>{value.reduce((acc, curr) => +acc + +curr.quantity, 0)}</Text>\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'orderLog',\r\n                Cell: ({value}) =>\r\n                    <Text>{getLastStatus(value).status}</Text>\r\n            }\r\n        ],\r\n        [])\r\n    const fetchOrders = useCallback(({pageSize, pageIndex, sortBy}) => {\r\n        setLoading(true)\r\n        let sort = 'desc(creationTimestamp)'\r\n\r\n        if(sortBy.length > 0) {\r\n            const sortDirection = sortBy[0].desc ? 'desc' : 'asc'\r\n            sort = sortDirection + '(' + sortBy[0].id + ')'\r\n        }\r\n\r\n        orderClient.fetchOrders(\r\n            (data) => {\r\n                setData(data.content)\r\n                setPageCount(data.totalPages)\r\n                setLoading(false)\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            },\r\n            {pageSize: pageSize, pageNumber: pageIndex, orderBy: sort})\r\n    }, [history, profileModel, orderClient])\r\n\r\n    return (\r\n        <Layout\r\n            title='Admin Orders'\r\n        >\r\n            <Heading level={2}>Orders</Heading>\r\n            <CustomDataTable\r\n                columns={columns}\r\n                data={data}\r\n                onSort={fetchOrders}\r\n                fetchData={fetchOrders}\r\n                loading={loading}\r\n                pageCount={pageCount}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminOrders\r\n","import Layout from '../components/Layout'\r\nimport {Anchor, Box, Button, Heading} from 'grommet'\r\nimport CustomDataTable from '../components/CustomDataTable'\r\nimport React, {useCallback, useMemo, useState} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\nimport ItemsClient from '../clients/ItemsClient'\r\nimport {Form} from \"grommet-controls\";\r\n\r\nfunction AdminItems () {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [pageCount, setPageCount] = useState(0)\r\n    const itemsClient = useMemo(() => {\r\n        return new ItemsClient()\r\n    }, [])\r\n    const columns = useMemo(() => [\r\n            {\r\n                Header: 'Code',\r\n                accessor: 'code',\r\n                Cell: ({value}) => <Anchor href={\"/#/adminitems/\" + value} label={value} />\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name'\r\n            },\r\n            {\r\n                Header: 'Category',\r\n                accessor: 'category'\r\n            },\r\n            {\r\n                Header: 'Price',\r\n                accessor: 'price',\r\n                Cell: ({value}) =>\r\n                    <NumberFormat\r\n                        displayType='text'\r\n                        prefix='USD $'\r\n                        decimalScale={2}\r\n                        fixedDecimalScale={true}\r\n                        value={value} />\r\n            },\r\n            {\r\n                Header: 'Creation Date',\r\n                accessor: 'creationTimestamp',\r\n                Cell: ({value}) =>\r\n                    <>{value.substr(0, 10)}</>\r\n            }\r\n        ],\r\n        [])\r\n\r\n    const fetchItems = useCallback(({pageSize, pageIndex, sortBy}) => {\r\n        setLoading(true)\r\n        let sort = 'desc(creationTimestamp)'\r\n\r\n        if(sortBy.length > 0) {\r\n            const sortDirection = sortBy[0].desc ? 'desc' : 'asc'\r\n            sort = sortDirection + '(' + sortBy[0].id + ')'\r\n        }\r\n        itemsClient.fetchItemsPage(\r\n            (data) => {\r\n                setData(data.content)\r\n                setPageCount(data.totalPages)\r\n                setLoading(false)\r\n            },\r\n            (error) => {\r\n            },\r\n            {pageSize: pageSize, pageNumber: pageIndex, orderBy: sort}\r\n        )\r\n    }, [itemsClient])\r\n\r\n    return (\r\n        <Layout\r\n            title='Admin Items'\r\n        >\r\n            <Heading level={2}>Items</Heading>\r\n\r\n            <Box\r\n                direction='row-responsive'\r\n                margin={{'bottom' : '2em'}}\r\n            >\r\n                <Form>\r\n                    <Button\r\n                        primary\r\n                        label='New'\r\n                        href='#/adminitems/new'\r\n                    />\r\n                </Form>\r\n            </Box>\r\n\r\n            <CustomDataTable\r\n                columns={columns}\r\n                data={data}\r\n                onSort={fetchItems}\r\n                fetchData={fetchItems}\r\n                loading={loading}\r\n                pageCount={pageCount}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminItems\r\n","import Layout from '../components/Layout'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Form,\r\n    FormField,\r\n    Heading,\r\n    RadioButtonGroup,\r\n    TextInput} from 'grommet'\r\nimport {useHistory, useParams} from 'react-router'\r\nimport {useEffect, useMemo, useState} from 'react'\r\nimport UsersClient from '../clients/UsersClient'\r\nimport ProfileModel from '../model/ProfileModel'\r\n\r\nfunction EditUser() {\r\n    const { username } = useParams()\r\n    const history = useHistory()\r\n    const profileModel = ProfileModel\r\n    const [userData, setUserData] = useState({\r\n        username : 'loading...'\r\n    })\r\n    const userClient = useMemo(() => {\r\n        return new UsersClient()\r\n    }, [])\r\n\r\n    const saveUser = (user) => {\r\n        userClient.updateUser(\r\n            () => {\r\n                history.push(\"/adminusers\")\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            },\r\n            user\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        userClient.fetchUser(\r\n            (userData) => {\r\n                setUserData(userData)\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            },\r\n            username\r\n        )\r\n    },[userClient, username, profileModel, history])\r\n\r\n    return (\r\n        <Layout\r\n            title={'Edit User'}\r\n        >\r\n            <Heading level={2}>Editing user '{username}'</Heading>\r\n            <Form\r\n                value={userData}\r\n                onChange={(newValue) => setUserData(newValue)}\r\n                onSubmit={({value}) => {saveUser(value)}}\r\n            >\r\n                <FormField name=\"username\" htmlFor=\"username-id\" label=\"Username\">\r\n                    <TextInput disabled id=\"username-id\" name=\"username\"/>\r\n                </FormField>\r\n                <FormField name=\"profile\" htmlFor=\"profile-id\" label=\"Profile\">\r\n                    <RadioButtonGroup\r\n                        id=\"profile-id\"\r\n                        name=\"profile\"\r\n                        options={['admin', 'client']}\r\n                    />\r\n                </FormField>\r\n                <FormField name=\"enabled\" htmlFor=\"enabled-id\" label=\"Enabled\">\r\n                    <RadioButtonGroup\r\n                        id=\"enabled-id\"\r\n                        name=\"enabled\"\r\n                        options={[true, false]}\r\n                    />\r\n                </FormField>\r\n                <FormField name=\"password\" htmlFor=\"password-id\" label=\"New Password\">\r\n                    <TextInput id=\"password-id\" name=\"password\"/>\r\n                </FormField>\r\n                <Box pad={{'horizontal': 'large'}}>\r\n                    <Button primary type=\"submit\" label=\"Save\" />\r\n                </Box>\r\n            </Form>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default EditUser\r\n","import Layout from '../components/Layout'\r\nimport {\r\n    Button,\r\n    CheckBoxGroup,\r\n    Form,\r\n    FormField,\r\n    Heading,\r\n    TextInput\r\n} from 'grommet'\r\nimport ItemsTable from '../components/ItemsTable'\r\nimport {useHistory, useParams} from 'react-router'\r\nimport {useEffect, useMemo, useState} from 'react'\r\nimport OrdersClient from '../clients/OrdersClient'\r\nimport ProfileModel from '../model/ProfileModel'\r\n\r\nfunction EditOrder () {\r\n    const { ordercode } = useParams()\r\n    const history = useHistory()\r\n    const [username, setUsername] = useState('')\r\n    const [status, setStatus] = useState([])\r\n    const [statusDisabled, setStatusDisabled] = useState(false)\r\n    const [items, setItems] = useState([{\r\n        code: 'abc',\r\n        picture: null,\r\n        name: null,\r\n        price: null,\r\n        quantity: null\r\n    }])\r\n    const [quantity, setQuantity] = useState({abc: 0})\r\n    const orderClient = useMemo(() => {\r\n        return new OrdersClient()\r\n    }, [])\r\n    const profileModel = ProfileModel\r\n\r\n    const onQuantityChange = (event, key) => {\r\n        let newQuantity = parseInt(event.target.value)\r\n        let quantityArray = {}\r\n        const foundItem = items.find(item1 => item1.code === key)\r\n        if (newQuantity > quantity[key]) foundItem.quantity++\r\n        if (newQuantity < quantity[key]) foundItem.quantity--\r\n        let newItems = [...items]\r\n        newItems.forEach(item => quantityArray[item.code] = item.quantity)\r\n        setItems(newItems)\r\n        setQuantity(quantityArray)\r\n    }\r\n\r\n    const onStatusChange = ({ value, option }) => {\r\n        if (option.name === 'completed') {\r\n            setStatus(value.filter(status => status !== 'admin-cancelled'))\r\n        }\r\n        if (option.name === 'admin-cancelled') {\r\n            setStatus(value.filter(status => status !== 'completed'))\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        let order = {\r\n            user: {username: username},\r\n            code: ordercode,\r\n            orderItems: [],\r\n            orderLog: []\r\n        }\r\n\r\n        items.forEach(item => {\r\n            if (item.quantity > 0) {\r\n                order.orderItems.push(\r\n                    {\r\n                        item:{code: item.code},\r\n                        quantity: item.quantity\r\n                    })\r\n            }\r\n        })\r\n\r\n        status.forEach(entry => order.orderLog.push(\r\n            {\r\n                status: entry\r\n            }))\r\n\r\n        orderClient.updateOrder(\r\n            () => {\r\n                history.push(\"/adminorders\")\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            },\r\n            order\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        let quantityArray = []\r\n        orderClient.fetchOrder(\r\n            (order) => {\r\n                let items = []\r\n                let status = []\r\n                order.orderItems.forEach(item => {\r\n                    let item1 = {...item.item}\r\n                    item1.quantity = item.quantity\r\n                    items.push(item1)\r\n                    quantityArray[item.item.code] = item.quantity\r\n                })\r\n                order.orderLog.forEach(entry => {\r\n                    status.push(entry.status)\r\n                })\r\n                setStatusDisabled(status.length > 1)\r\n                setUsername(order.user.username)\r\n                setStatus(status)\r\n                setItems(items)\r\n                setQuantity(quantityArray)\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            },\r\n            ordercode\r\n        )\r\n    }, [history, orderClient, ordercode, profileModel])\r\n\r\n    return (\r\n        <Layout title='Edit Order'>\r\n            <Heading level={2}> Editing order '{ordercode}'</Heading>\r\n            <Form>\r\n                <FormField\r\n                    name=\"username\"\r\n                    htmlFor=\"username-id\"\r\n                    label=\"Username\">\r\n                    <TextInput\r\n                        disabled\r\n                        id=\"username-id\"\r\n                        name=\"username\"\r\n                        value={username}/>\r\n                </FormField>\r\n\r\n                <FormField\r\n                    name=\"status\"\r\n                    htmlFor=\"status-id\"\r\n                    label=\"Status\">\r\n                    <CheckBoxGroup\r\n                        id=\"status-id\"\r\n                        disabled={statusDisabled}\r\n                        name=\"status\"\r\n                        valueKey=\"name\"\r\n                        options={[\r\n                            {label: \"Placed\", name: \"placed\", disabled: true},\r\n                            {label: \"Cancelled\", name: \"admin-cancelled\"},\r\n                            {label: \"Completed\", name: \"completed\"}\r\n                        ]}\r\n                        value={status}\r\n                        onChange={onStatusChange}\r\n                    />\r\n                </FormField>\r\n\r\n                <FormField\r\n                    label=\"Order Items\"\r\n                    disabled={statusDisabled}\r\n                >\r\n                    <ItemsTable\r\n                        data={items}\r\n                        quantity={quantity}\r\n                        onQuantityChange={onQuantityChange}\r\n                        disabled={statusDisabled}\r\n                    />\r\n                </FormField>\r\n                <Button\r\n                    primary\r\n                    label={statusDisabled ? 'Return' : 'Save'}\r\n                    onClick={onSave}\r\n                />\r\n            </Form>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default EditOrder\r\n","import {Box, Button, Form, FormField, Select, TextArea, TextInput} from 'grommet'\r\n\r\nfunction ItemForm (props) {\r\n\r\n    return (\r\n        <Form\r\n            value={props.data}\r\n            onChange={props.onChange}\r\n            onSubmit={({value}) => {props.onSubmit(value)}}\r\n        >\r\n            <FormField\r\n                name=\"name\"\r\n                htmlFor=\"name-id\"\r\n                label=\"Name\">\r\n                <TextInput disabled={props.isEditing} id=\"name-id\" name=\"name\"/>\r\n            </FormField>\r\n            <FormField name=\"category\" htmlFor=\"category-id\" label=\"category\">\r\n                <Select\r\n                    disabled={props.isEditing}\r\n                    name=\"category\"\r\n                    options={['2x2', '3x3', '4x4', '5x5', '6x6', '7x7', '8x8', 'MxN', 'NxN', 'other']}\r\n                />\r\n            </FormField>\r\n            <FormField name=\"description\" htmlFor=\"description-id\" label=\"Description\">\r\n                <TextArea name=\"description\" />\r\n            </FormField>\r\n            <FormField\r\n                name=\"price\"\r\n                htmlFor=\"price-id\"\r\n                label=\"Price\"\r\n                validate={(field, form) => {\r\n                    if(!/^[0-9]+(.[0-9]{1,2})?$/.test(form.price)) return \"Price must match NN...N.NN\"\r\n                }}\r\n            >\r\n                <TextInput id=\"price-id\" name=\"price\"/>\r\n            </FormField>\r\n            <FormField name=\"pictureurl\" htmlFor=\"pictureurl-id\" label=\"Picture URL\">\r\n                <TextInput id=\"pictureurl-id\" name=\"pictureurl\" placeholder=\"Write new image URL\"/>\r\n            </FormField>\r\n            <Box pad={{'horizontal': 'large'}}>\r\n                <Button primary type=\"submit\" label=\"Save\" />\r\n            </Box>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default ItemForm\r\n","import Layout from '../components/Layout'\r\nimport {Heading} from 'grommet'\r\nimport {useHistory, useParams} from 'react-router'\r\nimport {useEffect, useMemo, useState} from 'react'\r\nimport ItemsClient from '../clients/ItemsClient'\r\nimport ProfileModel from \"../model/ProfileModel\";\r\nimport ItemForm from \"../components/ItemForm\";\r\n\r\nfunction EditItem () {\r\n    const { itemcode } = useParams()\r\n    const history = useHistory()\r\n    const [data, setData] = useState({})\r\n    const itemsClient = useMemo(() => {\r\n        return new ItemsClient()\r\n    }, [])\r\n    const profileModel = ProfileModel\r\n\r\n    useEffect(() => {\r\n        if(itemcode === 'new')\r\n            return\r\n        itemsClient.fetchItemByCode(\r\n            (itemData) => {\r\n                setData(itemData)\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            },\r\n            itemcode\r\n        )\r\n    }, [itemsClient, itemcode])\r\n\r\n    const saveItem = (value) => {\r\n        itemsClient.updateItem(\r\n            (result) => {\r\n                history.push(\"/adminitems\")\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            },\r\n            value)\r\n    }\r\n\r\n    return (\r\n        <Layout title='Edit Item'>\r\n            <Heading level={2}>Editing item '{itemcode}'</Heading>\r\n            <ItemForm\r\n                data={data}\r\n                onChange={(newValue) => setData(newValue)}\r\n                onSubmit={saveItem}\r\n                isEditing={true}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default EditItem\r\n","import Layout from \"../components/Layout\";\r\nimport {Bug} from \"grommet-icons\";\r\nimport {Anchor, Box, Heading, Text} from \"grommet\";\r\n\r\nfunction Page403() {\r\n\r\n    return (\r\n        <Layout title='Ooooooops!'>\r\n            <Heading level={2} margin={{'horizontal' : 'auto'}}>Forbidden Resource</Heading>\r\n            <Box fill='horizontal' align='center'>\r\n                <Bug size='xlarge' margin={{'horizontal' : 'auto'}}/>\r\n                <Text\r\n                    size='large'>\r\n                    You don't have access to the requested resource. Please <Anchor href='/#/login'>Log in</Anchor> correctly.\r\n                </Text>\r\n            </Box>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Page403\r\n","import Layout from \"../components/Layout\";\r\nimport {Search} from \"grommet-icons\";\r\nimport {Box, Heading, Text} from \"grommet\";\r\n\r\nfunction Page404() {\r\n\r\n    return (\r\n        <Layout title='Ooooooops!'>\r\n            <Heading level={2} margin={{'horizontal' : 'auto'}}>404 Not found!</Heading>\r\n            <Box fill='horizontal' align='center'>\r\n                <Search size='xlarge' margin={{'horizontal' : 'auto'}}/>\r\n                <Text\r\n                    size='large'>\r\n                    We didn't found the resource. Maybe you followed a broken link?\r\n                </Text>\r\n            </Box>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Page404\r\n","import Layout from '../components/Layout'\r\nimport {Heading} from 'grommet'\r\nimport {useHistory, useParams} from 'react-router'\r\nimport {useEffect, useMemo, useState} from 'react'\r\nimport ItemsClient from '../clients/ItemsClient'\r\nimport ProfileModel from \"../model/ProfileModel\";\r\nimport ItemForm from \"../components/ItemForm\";\r\n\r\nfunction EditItem () {\r\n    const { itemcode } = useParams()\r\n    const history = useHistory()\r\n    const [data, setData] = useState({})\r\n    const itemsClient = useMemo(() => {\r\n        return new ItemsClient()\r\n    }, [])\r\n    const profileModel = ProfileModel\r\n\r\n    const saveItem = (value) => {\r\n        itemsClient.saveItem(\r\n            (result) => {\r\n                history.push(\"/adminitems\")\r\n            },\r\n            (error) => {\r\n                if(error.error === \"uilogout\") {\r\n                    profileModel.logout()\r\n                    history.push('/login?logoutreason=tokenexpired')\r\n                }\r\n            },\r\n            value)\r\n    }\r\n\r\n    return (\r\n        <Layout title='New Item'>\r\n            <Heading level={2}>New Item</Heading>\r\n            <ItemForm\r\n                data={data}\r\n                onChange={(newValue) => setData(newValue)}\r\n                onSubmit={saveItem}\r\n                isEditing={false}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default EditItem\r\n","import {\n    HashRouter,\n    Switch,\n    Route\n} from 'react-router-dom'\nimport Recommendations from './superstore/pages/Recommendations'\nimport Cart from './superstore/pages/Cart'\nimport Checkout from './superstore/pages/Checkout'\nimport Profile from './superstore/pages/Profile'\nimport Login from './superstore/pages/Login'\nimport AdminUsers from './superstore/pages/AdminUsers'\nimport AdminOrders from './superstore/pages/AdminOrders'\nimport AdminItems from './superstore/pages/AdminItems'\nimport EditUser from './superstore/pages/EditUser'\nimport EditOrder from './superstore/pages/EditOrder'\nimport EditItem from './superstore/pages/EditItem'\nimport Page403 from './superstore/pages/Page403'\nimport Page404 from './superstore/pages/Page404'\nimport ProfileModel from './superstore/model/ProfileModel'\nimport {Redirect} from \"react-router\";\nimport NewItem from \"./superstore/pages/NewItem\";\n\nfunction App () {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path='/'>\n                    {ProfileModel.isAdmin() && <Redirect to='/adminorders' />}\n                    {!ProfileModel.isAdmin() && <Recommendations/>}\n                </Route>\n                <Route exact path='/cart'>\n                    <Cart/>\n                </Route>\n                <Route exact path='/checkout'>\n                    <Checkout/>\n                </Route>\n                <Route exact path='/profile'>\n                    <Profile/>\n                </Route>\n                <Route exact path='/login'>\n                    <Login/>\n                </Route>\n                <Route exact path='/adminusers'>\n                    <AdminUsers/>\n                </Route>\n                <Route exact path='/adminusers/:username'>\n                    <EditUser/>\n                </Route>\n                <Route exact path='/adminorders'>\n                    <AdminOrders/>\n                </Route>\n                <Route exact path='/adminorders/:ordercode'>\n                    <EditOrder/>\n                </Route>\n                <Route exact path='/adminitems'>\n                    <AdminItems/>\n                </Route>\n                <Route exact path='/adminitems/new'>\n                    <NewItem/>\n                </Route>\n                <Route exact path='/adminitems/:itemcode'>\n                    <EditItem/>\n                </Route>\n                <Route exact path='/403'>\n                    <Page403/>\n                </Route>\n                <Route exact path='/404'>\n                    <Page404/>\n                </Route>\n            </Switch>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}